{"version":3,"sources":["index.js"],"names":["debug","DEFAULT_BASE_HOST","DEFAULT_CATEGORY","DEFAULT_CATEGORY_DETAILS_INDEX","DEFAULT_PATH","DEFAULT_QUERYSTRING","DEFAULT_REQUEST_OPTIONS","hostname","path","secure","PROTOCOL_INSECURE","PROTOCOL_SECURE","QUERY_KEYS","QUERY_PARAM_BUNDLE_DUPLICATES","QUERY_PARAM_HAS_IMAGE","QUERY_PARAM_MAX","QUERY_PARAM_MIN","QUERY_PARAM_POSTAL","QUERY_PARAM_POSTED_TODAY","QUERY_PARAM_QUERY","QUERY_PARAM_SEARCH_DISTANCE","QUERY_PARAM_SEARCH_NEARBY","QUERY_PARAM_SEARCH_TITLES_ONLY","QUERY_PARAM_OFFSET","RE_HTML","RE_TAGS_MAP","_getPostingDetails","postingUrl","markup","$","load","attributes","details","description","text","trim","mapUrl","find","attr","pid","substring","search","replace","replyUrl","title","url","each","i","element","infoType","test","split","postedAt","Date","updatedAt","images","push","last","children","is","attribute","Object","keys","length","_getPostings","options","posting","postings","filter","term","map","detailsUrl","set","category","coordinates","lat","lon","date","hasPic","location","price","toString","_getReplyDetails","next","li","contactName","parent","value","phoneNumber","indexOf","email","_getRequestOptions","query","requestOptions","JSON","parse","stringify","self","Validation","coalesce","city","baseHost","join","forEach","key","isEmpty","encodeURIComponent","bundleDuplicates","hasImage","minAsk","maxAsk","postal","postedToday","searchDistance","searchNearby","searchTitlesOnly","offset","Client","request","Request","callback","exec","getDetails","Promise","resolve","reject","Error","protocol","get","then","catch","promiseOrCallback","undefined"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nimport 'babel-polyfill';\nimport 'source-map-support/register';\nimport cheerio from 'cheerio';\nimport core from './core.js';\nimport debugLog from 'debug';\nimport parse from 'url-parse';\nimport url from 'url';\nimport web from './web.js';\n\nconst\n\tdebug = debugLog('craigslist'),\n\tDEFAULT_BASE_HOST = 'craigslist.org',\n\tDEFAULT_CATEGORY = 'sss',\n\tDEFAULT_CATEGORY_DETAILS_INDEX = 1,\n\tDEFAULT_PATH = '/search/',\n\tDEFAULT_QUERYSTRING = '?sort=rel',\n\tDEFAULT_REQUEST_OPTIONS = {\n\t\thostname : '',\n\t\tpath : '',\n\t\tsecure : true\n\t},\n\tPROTOCOL_INSECURE = 'http',\n\tPROTOCOL_SECURE = 'https',\n\tQUERY_KEYS = [\n\t\t'bundleDuplicates',\n\t\t'category',\n\t\t'hasImage',\n\t\t'hasPic',\n\t\t'maxAsk',\n\t\t'minAsk',\n\t\t'offset',\n\t\t'postal',\n\t\t'postedToday',\n\t\t'query',\n\t\t'searchDistance',\n\t\t'searchNearby',\n\t\t'searchTitlesOnly',\n\t\t'srcType'\n\t],\n\tQUERY_PARAM_BUNDLE_DUPLICATES = '&bundleDuplicates=1',\n\tQUERY_PARAM_HAS_IMAGE = '&hasPic=1',\n\tQUERY_PARAM_MAX = '&maxAsk=',\n\tQUERY_PARAM_MIN = '&minAsk=',\n\tQUERY_PARAM_POSTAL = '&postal=',\n\tQUERY_PARAM_POSTED_TODAY = '&postedToday=1',\n\tQUERY_PARAM_QUERY = '&query=',\n\tQUERY_PARAM_SEARCH_DISTANCE = '&search_distance=',\n\tQUERY_PARAM_SEARCH_NEARBY = '&searchNearby=1',\n\tQUERY_PARAM_SEARCH_TITLES_ONLY = '&srchType=T',\n\tQUERY_PARAM_OFFSET = '&s=',\n\tRE_HTML = /\\.htm(l)?/i,\n\tRE_TAGS_MAP = /map/i;\n\n/**\n * Accepts strong of HTML and parses that string to find key details.\n *\n * @param {string} postingUrl - URL that details were loaded from\n * @param {string} markup - Markup from the request to Craigslist\n * @returns {object} details - The processed details from the Craigslist posting\n **/\nfunction _getPostingDetails (postingUrl, markup) {\n\tlet\n\t\t$ = cheerio.load(markup),\n\t\tattributes = {},\n\t\tdetails = {};\n\n\tdetails.description = ($('#postingbody').text() || '').trim();\n\tdetails.mapUrl = $('div.mapbox p.mapaddress')\n\t\t.find('a')\n\t\t.attr('href');\n\tdetails.pid = postingUrl\n\t\t.substring(postingUrl.search(/[0-9]*\\.html/))\n\t\t.replace(/\\.html/, '');\n\tdetails.replyUrl = ($('#replylink').attr('href') || '').trim();\n\tdetails.title = ($('#titletextonly').text() || '').trim();\n\tdetails.url = postingUrl;\n\n\t// populate posting info\n\t$('div.postinginfos').find('.postinginfo').each((i, element) => {\n\t\tlet infoType = $(element).text();\n\n\t\t// set pid (a backup to ripping it from the URL)\n\t\tif (/post\\sid/i.test(infoType)) {\n\t\t\tdetails.pid = (infoType.split(/\\:/)[1] || '').trim();\n\t\t\treturn;\n\t\t}\n\n\t\t// set postedAt\n\t\tif (/posted/i.test(infoType) && $(element).find('time').attr('datetime')) {\n\t\t\tdetails.postedAt = new Date($(element).find('time').attr('datetime'));\n\t\t\treturn;\n\t\t}\n\n\t\t// set updatedAt\n\t\tif (/updated/i.test(infoType) && $(element).find('time').attr('datetime')) {\n\t\t\tdetails.updatedAt = new Date($(element).find('time').attr('datetime'));\n\t\t\treturn;\n\t\t}\n\t});\n\n\t// populate posting photos\n\t$('#thumbs').find('a').each((i, element) => {\n\t\tdetails.images = details.images || [];\n\t\tdetails.images.push(($(element).attr('href') || '').trim());\n\t});\n\n\t// grab attributes if they exist\n\t$('div.mapAndAttrs')\n\t\t.find('p.attrgroup')\n\t\t.last()\n\t\t.children()\n\t\t.each((i, element) => {\n\t\t\tif ($(element).is('span')) {\n\t\t\t\tlet attribute = $(element).text().split(/:\\s/);\n\t\t\t\tattributes[attribute[0].replace(/\\s/g, '_')] = attribute[1];\n\t\t\t}\n\t\t});\n\n\t// populate attributes\n\tif (attributes && Object.keys(attributes).length) {\n\t\tdetails.attributes = attributes;\n\t}\n\n\treturn details;\n}\n\n/**\n * Accepts string of HTML and parses that string to find all pertinent postings.\n *\n * @param {object} options - Request options used for the request to craigslist\n * @param {string} markup - Markup from the request to Craigslist\n * @returns {Array} postings - The processed and normalized array of postings\n **/\nfunction _getPostings (options, markup) {\n\tlet\n\t\t$ = cheerio.load(markup),\n\t\t// hostname = options.hostname,\n\t\tposting = {},\n\t\tpostings = [],\n\t\tsecure = options.secure;\n\n\t$('div.content')\n\t\t.find('.result-row')\n\t\t.each((i, element) => {\n\t\t\tlet\n\t\t\t\t// introducing fix for #11 - Craigslist markup changed\n\t\t\t\tdetails = $(element)\n\t\t\t\t\t.find('.result-title')\n\t\t\t\t\t.attr('href')\n\t\t\t\t\t.split(/\\//g)\n\t\t\t\t\t.filter((term) => term.length)\n\t\t\t\t\t.map((term) => term.split(RE_HTML)[0]),\n\t\t\t\t// fix for #6 and #24\n\t\t\t\tdetailsUrl = parse($(element)\n\t\t\t\t\t.find('.result-title')\n\t\t\t\t\t.attr('href'));\n\n\t\t\t// ensure hostname and protocol are properly set\n\t\t\tdetailsUrl.set('hostname', detailsUrl.hostname || options.hostname);\n\t\t\tdetailsUrl.set('protocol', secure ? PROTOCOL_SECURE : PROTOCOL_INSECURE);\n\n\t\t\tposting = {\n\t\t\t\tcategory : details[DEFAULT_CATEGORY_DETAILS_INDEX],\n\t\t\t\tcoordinates : {\n\t\t\t\t\tlat : $(element).attr('data-latitude'),\n\t\t\t\t\tlon : $(element).attr('data-longitude')\n\t\t\t\t},\n\t\t\t\tdate : ($(element)\n\t\t\t\t\t.find('time')\n\t\t\t\t\t.attr('datetime') || '')\n\t\t\t\t\t\t.trim(),\n\t\t\t\thasPic : RE_TAGS_MAP\n\t\t\t\t\t.test($(element)\n\t\t\t\t\t\t.find('.result-tags')\n\t\t\t\t\t\t.text() || ''),\n\t\t\t\tlocation : ($(element)\n\t\t\t\t\t.find('.result-hood')\n\t\t\t\t\t.text() || '')\n\t\t\t\t\t.trim(),\n\t\t\t\tpid : ($(element)\n\t\t\t\t\t.attr('data-pid') || '')\n\t\t\t\t\t\t.trim(),\n\t\t\t\tprice : ($(element)\n\t\t\t\t\t.find('.result-meta .result-price')\n\t\t\t\t\t.text() || '')\n\t\t\t\t\t\t.replace(/^\\&\\#x0024\\;/g, '')\n\t\t\t\t\t\t.trim(), // sanitize\n\t\t\t\ttitle : ($(element)\n\t\t\t\t\t.find('.result-title')\n\t\t\t\t\t.text() || '')\n\t\t\t\t\t\t.trim(),\n\t\t\t\turl : detailsUrl.toString()\n\t\t\t};\n\n\t\t\t// make sure lat / lon is valid\n\t\t\tif (typeof posting.coordinates.lat === 'undefined' ||\n\t\t\t\ttypeof posting.coordinates.lon === 'undefined') {\n\t\t\t\tdelete posting.coordinates;\n\t\t\t}\n\n\t\t\tpostings.push(posting);\n\t\t});\n\n\treturn postings;\n}\n\n/**\n * Accepts strong of HTML and parses that string to find key details.\n *\n * @param {object} details - a posting object to populate\n * @param {string} markup - Markup from the request to Craigslist\n * @returns {null} - Returns empty\n **/\nfunction _getReplyDetails (details, markup) {\n\tlet $ = cheerio.load(markup);\n\n\t$('div.reply_options').find('b').each((i, element) => {\n\t\tlet infoType = $(element).text().trim();\n\n\t\t// set contact name\n\t\tif (/contact\\sname/i.test(infoType)) {\n\t\t\t$(element).next().find('li').each((i, li) => {\n\t\t\t\tdetails.contactName = $(li).text().trim();\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\t// set phone number and email\n\t\tif (/call/i.test(infoType)) {\n\t\t\t$(element).parent().find('li').each((i, li) => {\n\t\t\t\tlet value = $(li).text().trim();\n\n\t\t\t\t// check for phone value (based on the emoji)\n\t\t\t\tif (/\\u260E/.test(value)) {\n\t\t\t\t\tdetails.phoneNumber = value.substring(value.indexOf('('));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// check for email value (based on the @ symbol)\n\t\t\t\tif (/\\@/.test(value)) {\n\t\t\t\t\tdetails.email = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\t});\n}\n\n/**\n * Accepts options, iterates through the known acceptable keys from defaultOptions\n * and if found in input options, uses that. If not found in input options to method,\n * falls back to the options specified when the module was initialized. If not found\n * in initialization options, uses the default options setting. All keys provided in\n * the input options variable are retained.\n *\n * @param {object} options - Input options for the web request\n * @param {string} query - A querystring\n * @returns {object} options - The coalesced result of options\n **/\nfunction _getRequestOptions (options, query) {\n\tvar\n\t\trequestOptions = JSON.parse(JSON.stringify(DEFAULT_REQUEST_OPTIONS)),\n\t\t/*eslint no-invalid-this:0*/\n\t\tself = this;\n\n\t// ensure default options are set, even if omitted from input options\n\trequestOptions.hostname = [\n\t\tcore.Validation.coalesce(options.city, self.options.city, ''),\n\t\t// introducing fix for #7\n\t\tcore.Validation.coalesce(\n\t\t\toptions.baseHost,\n\t\t\tself.options.baseHost,\n\t\t\tDEFAULT_BASE_HOST)\n\t].join('.');\n\n\t// preserve any extraneous input option keys (may have addition instructions for underlying request object)\n\tObject\n\t\t.keys(options)\n\t\t.forEach((key) => {\n\t\t\tif (!QUERY_KEYS.indexOf(key) &&\n\t\t\t\tcore.Validation.isEmpty(requestOptions[key]) &&\n\t\t\t\tcore.Validation.isEmpty(DEFAULT_REQUEST_OPTIONS[key])) {\n\t\t\t\trequestOptions[key] = options[key];\n\t\t\t}\n\t\t});\n\n\t// setup path\n\tif (core.Validation.isEmpty(requestOptions.path)) {\n\t\trequestOptions.path = DEFAULT_PATH;\n\t}\n\n\t// setup category\n\trequestOptions.path = [\n\t\trequestOptions.path,\n\t\tcore.Validation.coalesce(options.category, DEFAULT_CATEGORY)].join('');\n\n\t// setup querystring\n\trequestOptions.path = [requestOptions.path, DEFAULT_QUERYSTRING].join('');\n\n\t// add search query (if specified)\n\tif (!core.Validation.isEmpty(query)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_QUERY,\n\t\t\tencodeURIComponent(query)].join('');\n\t}\n\n\t// add bundleDuplicates (if specified)\n\tif (options.bundleDuplicates) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_BUNDLE_DUPLICATES].join('');\n\t}\n\n\t// add hasPic (if specified)\n\tif (options.hasImage || options.hasPic) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_HAS_IMAGE].join('');\n\t}\n\n\t// add min asking price (if specified)\n\tif (!core.Validation.isEmpty(options.minAsk)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_MIN,\n\t\t\toptions.minAsk].join('');\n\t}\n\n\t// add max asking price (if specified)\n\tif (!core.Validation.isEmpty(options.maxAsk)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_MAX,\n\t\t\toptions.maxAsk].join('');\n\t}\n\n\t// add postal (if specified)\n\tif (!core.Validation.isEmpty(options.postal)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_POSTAL,\n\t\t\toptions.postal].join('');\n\t}\n\n\t// add postedToday (if specified)\n\tif (options.postedToday) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_POSTED_TODAY].join('');\n\t}\n\n\t// add searchDistance (if specified)\n\tif (!core.Validation.isEmpty(options.searchDistance)) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_SEARCH_DISTANCE,\n\t\t\toptions.searchDistance].join('');\n\t}\n\n\t// add searchNearby (if specified)\n\tif (options.searchNearby) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_SEARCH_NEARBY].join('');\n\t}\n\n\t// add searchTitlesOnly (if specified)\n\tif (options.searchTitlesOnly) {\n\t\trequestOptions.path = [\n\t\t\trequestOptions.path,\n\t\t\tQUERY_PARAM_SEARCH_TITLES_ONLY].join('');\n\t}\n\n\t// add offset (if specified)\n\tif (options.offset) {\n\t\trequestOptions.path = [requestOptions.path, QUERY_PARAM_OFFSET, options.offset].join('');\n\t}\n\n\n\tdebug('setting request options: %o', requestOptions);\n\n\treturn requestOptions;\n}\n\nexport class Client {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t\tthis.request = new web.Request(this.options);\n\t}\n\n\tdetails (posting, callback) {\n\t\tlet\n\t\t\texec,\n\t\t\tgetDetails,\n\t\t\tpostingUrl,\n\t\t\trequestOptions,\n\t\t\tself = this;\n\n\t\t// retrieves the posting details directly\n\t\tgetDetails = new Promise((resolve, reject) => {\n\t\t\tif (core.Validation.isEmpty(posting)) {\n\t\t\t\treturn reject(new Error('posting URL is required'));\n\t\t\t}\n\n\t\t\tif (typeof posting !== 'string' && core.Validation.isEmpty(posting.url)) {\n\t\t\t\treturn reject(new Error('posting URL is required'));\n\t\t\t}\n\n\t\t\tpostingUrl = typeof posting === 'string' ? posting : posting.url;\n\t\t\trequestOptions = url.parse(postingUrl);\n\t\t\trequestOptions.secure = /https/i.test(requestOptions.protocol);\n\n\t\t\tdebug('request options set to: %o', requestOptions);\n\n\t\t\treturn self.request\n\t\t\t\t.get(requestOptions)\n\t\t\t\t.then((markup) => {\n\t\t\t\t\tdebug('retrieved posting %o', posting);\n\t\t\t\t\tlet details = self::_getPostingDetails(postingUrl, markup);\n\n\t\t\t\t\treturn resolve(details);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t});\n\n\t\texec = new Promise((resolve, reject) => {\n\t\t\treturn getDetails\n\t\t\t\t.then((details) => {\n\t\t\t\t\tif (!details.replyUrl) {\n\t\t\t\t\t\treturn resolve(details);\n\t\t\t\t\t}\n\n\t\t\t\t\tdetails.replyUrl = parse(details.replyUrl);\n\n\t\t\t\t\tif (!details.replyUrl.hostname) {\n\t\t\t\t\t\tdetails.replyUrl.hostname = requestOptions.hostname;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn self.request\n\t\t\t\t\t\t.get(details.replyUrl)\n\t\t\t\t\t\t.then((markup) => {\n\t\t\t\t\t\t\tself::_getReplyDetails(details, markup);\n\n\t\t\t\t\t\t\treturn resolve(details);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t});\n\n\t\t// execute!\n\t\treturn core.Validation.promiseOrCallback(exec, callback);\n\t}\n\n\tlist (options, callback) {\n\t\t/*eslint no-undefined:0*/\n\t\treturn this.search(options, undefined, callback);\n\t}\n\n\tsearch (options, query, callback) {\n\t\tif (typeof query === 'function' && core.Validation.isEmpty(callback)) {\n\t\t\tcallback = query;\n\t\t\tquery = typeof options === 'string' ? options : query;\n\t\t\toptions = typeof options === 'string' ? {} : options;\n\t\t}\n\n\t\tif (core.Validation.isEmpty(query) && typeof options === 'string') {\n\t\t\tquery = options;\n\t\t\toptions = {};\n\t\t}\n\n\t\tif (typeof options === 'function') {\n\t\t\tcallback = options;\n\t\t\toptions = {};\n\t\t\t/*eslint no-undefined:0*/\n\t\t\tquery = undefined;\n\t\t}\n\n\t\t// ensure options is at least a blank object before continuing\n\t\toptions = options || {};\n\n\t\tlet\n\t\t\texec,\n\t\t\tself = this;\n\n\t\t// create a Promise to execute the request\n\t\texec = new Promise((resolve, reject) => {\n\t\t\t// remap options for the request\n\t\t\tlet requestOptions = this::_getRequestOptions(options, query);\n\n\t\t\tdebug('request options set to: %o', requestOptions);\n\n\t\t\tif (core.Validation.isEmpty(requestOptions.hostname)) {\n\t\t\t\treturn reject(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t'unable to set hostname (check to see if city is specified)'));\n\t\t\t}\n\n\t\t\treturn self.request\n\t\t\t\t.get(requestOptions)\n\t\t\t\t.then((markup) => {\n\t\t\t\t\tlet postings = _getPostings(requestOptions, markup);\n\t\t\t\t\tdebug('found %d postings', postings.length);\n\n\t\t\t\t\treturn resolve(postings);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t});\n\n\t\t// execute!\n\t\treturn core.Validation.promiseOrCallback(exec, callback);\n\t}\n}\n\nexport default { Client }\n"]}